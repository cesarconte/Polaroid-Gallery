import{q as T,r as m,o as u,g as b,w as k,s as _,k as y,c as v,t as g,v as f,x as h,y as $,z as x,A as C,B as P,C as N,h as r,D as R,E as V,f as I,G as W,H as U,I as q,J as A,K as B,L as M,M as G,a as E,b as L,d,F as S}from"./index-CBL1Pzhd.js";const F={key:1},oe={__name:"CardSubtitle",props:{title:{type:String,default:""},subtitleText:{type:String,default:""},html:{type:String,default:""}},setup(e){const a=e,t=T(()=>a.html.length>0);return(s,l)=>{const i=m("v-card-subtitle");return u(),b(i,null,{default:k(()=>[t.value?y("",!0):_(s.$slots,"subtitle",{key:0}),t.value?y("",!0):(u(),v("span",F,g(e.subtitleText),1))]),_:3})}}},Y=e=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e),z=e=>{const a=e.length>=8,t=/[A-Z]/.test(e),s=/[a-z]/.test(e),l=/\d/.test(e);return a&&t&&s&&l},H=f();async function D(e){const a=h(H,"users",e);return(await $(a)).exists()}const j=async(e,a)=>{if(!e||!a)return console.error("User or avatar file not provided"),null;try{const t=x(),s={contentType:a.type},l=C(t,`avatars/${e.email}`);await P(l,a,s);const c=await N(l);return console.log("Avatar uploaded successfully:",c),c}catch(t){return console.error("Error during avatar upload:",t),null}},J=async()=>{try{const e=C(x(),"avatars/Avatar.svg");return await N(e)}catch(e){return console.error("Error obtaining default avatar URL:",e),null}};async function K(e){const a=f(),t=h(a,"users",e.uid);try{let s=r.avatar;s?s=await j(e,r.avatar):s=await J(),await R(t,{email:r.email,firstName:r.firstName,lastName:r.lastName,fullName:r.firstName+" "+r.lastName,avatar:s,createdCards:[],favoriteCards:[],likeCards:[],followers:[],following:[]})}catch(s){console.error("Error setting user document:",s)}}const Z=e=>{alert("Error: "+e)},O=e=>{alert("Success: "+e)},Q=e=>{alert("Warning: "+e)},X=e=>{alert("Info: "+e)},n=(e,a="info")=>{switch(a){case"error":Z(e);break;case"success":O(e);break;case"warning":Q(e);break;default:X(e)}},p=V(),ee=f(),o=I(""),ne=e=>{r.avatar=e.target.files[0]},le=async e=>{if(!Y(r.email)){n("Invalid email format","error");return}if(!z(r.password)){n("Invalid password format","error");return}try{const t=(await W(p,r.email,r.password)).user;if(!t)throw new Error("User creation failed.");if(await D(r.email)){n("Account already exists for email "+r.email,"warning");return}await K(t),await U(t.uid),r.fullName&&n("Welcome, "+r.fullName+"! You have successfully signed up.","success"),e.push("/")}catch(a){switch(n("Error during sign-up: "+a.message,"error"),a.code){case"auth/invalid-email":o.value="Invalid email";break;case"auth/missing-password":o.value="Missing password";break;case"auth/wrong-password":o.value="Incorrect password";break;case"auth/invalid-password":o.value="Invalid password";break;case"auth/invalid-credential":o.value="Invalid credentials";break;case"auth/too-many-requests":o.value="Too many requests";break}}},ie=async e=>{try{const t=(await q(p,r.email,r.password)).user;await U(t.uid),r.fullName&&n("Welcome back, "+r.fullName+"!","success"),A(),e.push("/")}catch(a){switch(n("Error during sign-in: "+a.message,"error"),a.code){case"auth/invalid-email":o.value="Invalid email";break;case"auth/missing-password":o.value="Missing password";break;case"auth/user-not-found":o.value="No account with that email was found";break;case"auth/wrong-password":o.value="Incorrect password";break;case"auth/invalid-password":o.value="Invalid password";break;case"auth/invalid-credential":o.value="Invalid credentials";break;case"auth/invalid-login-credentials":o.value="Invalid login credentials";break;case"auth/too-many-requests":o.value="Too many requests";break}}},ce=async e=>{const a=new B;try{const s=(await M(p,a)).user;if(await D(s.uid))console.log("User already exists, logging in..."),n("Welcome back, "+s.displayName+"!","success"),e.push("/");else{console.log("User does not exist, creating document...");const l=h(ee,"users",s.uid),i=s.displayName.split(" "),c=i[0],w=i.slice(1).join(" ")||"";await R(l,{email:s.email,firstName:c,lastName:w,fullName:c+" "+w,createdCards:[],favoriteCards:[],likeCards:[],avatar:s.photoURL}),console.log("User created successfully."),n("Welcome, "+s.displayName+"!","success"),A(),e.push("/")}}catch(t){n("Error during Google sign-in: "+t.message,"error")}},ae=(e,a)=>`
    Dear User,

    You have requested to reset your password. Please click on the following link to reset your password:

    ${a}

    If you did not request this password reset, you can safely ignore this email.

    Regards,
    Your Application Team
  `,ue=async e=>{try{const t=ae(e,"https://example.com/reset-password");console.log("Contenido del correo electrónico de restablecimiento de contraseña:",t),await G(p,e),console.log(e),n("Password reset email sent. Check your inbox.","success")}catch(a){n("Error sending password reset email: "+a.message,"error")}},se={class:"text-subtitle-1 text-medium-emphasis"},de={__name:"FormEmailInput",props:{divTxt:String},setup(e){return(a,t)=>{const s=m("v-text-field");return u(),v(S,null,[E("div",se,g(e.divTxt),1),L(s,{modelValue:d(r).email,"onUpdate:modelValue":t[0]||(t[0]=l=>d(r).email=l),density:"compact",placeholder:"Email address","prepend-inner-icon":"mdi-email-outline",variant:"outlined",type:"email",clearable:""},null,8,["modelValue"])],64)}}},te={class:"text-subtitle-1 text-medium-emphasis"},me={__name:"FormPasswordInput",props:{divTxt:String,placeholder:String},setup(e){const a=I(!1);return(t,s)=>{const l=m("v-text-field");return u(),v(S,null,[E("div",te,g(e.divTxt),1),L(l,{modelValue:d(r).password,"onUpdate:modelValue":s[0]||(s[0]=i=>d(r).password=i),"append-inner-icon":a.value?"mdi-eye-off-outline":"mdi-eye-outline",type:a.value?"text":"password",density:"compact",placeholder:e.placeholder,"prepend-inner-icon":"mdi-lock-outline",variant:"outlined","onClick:appendInner":s[1]||(s[1]=i=>a.value=!a.value),clearable:""},null,8,["modelValue","append-inner-icon","type","placeholder"])],64)}}},pe={__name:"RouterLink",props:{to:String,btnText:String},setup(e){return(a,t)=>{const s=m("RouterLink",!0);return u(),b(s,{to:e.to},{default:k(()=>[_(a.$slots,"default")]),_:3},8,["to"])}}};export{oe as _,de as a,me as b,z as c,pe as d,ce as e,o as f,ie as g,ue as h,Y as i,ne as o,le as s};
